/* tslint:disable */
/* eslint-disable */
/**
 * RDPMS API v1
 * RDPMS API v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface S3FileCreateRequestDTO
 */
export interface S3FileCreateRequestDTO {
    /**
     * 
     * @type {string}
     * @memberof S3FileCreateRequestDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof S3FileCreateRequestDTO
     */
    contentTypeId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof S3FileCreateRequestDTO
     */
    sizeBytes?: number | null;
    /**
     * 
     * @type {string}
     * @memberof S3FileCreateRequestDTO
     */
    plainSHA256Hash?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof S3FileCreateRequestDTO
     */
    createdStamp?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof S3FileCreateRequestDTO
     */
    beginStamp?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof S3FileCreateRequestDTO
     */
    endStamp?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof S3FileCreateRequestDTO
     */
    compressionAlgorithm?: string | null;
    /**
     * If file is compressed, this is the SHA256 hash of the compressed file.
     * @type {string}
     * @memberof S3FileCreateRequestDTO
     */
    compressedSHA256Hash?: string | null;
    /**
     * 
     * @type {number}
     * @memberof S3FileCreateRequestDTO
     */
    compressedSizeBytes?: number | null;
}

/**
 * Check if a given object implements the S3FileCreateRequestDTO interface.
 */
export function instanceOfS3FileCreateRequestDTO(value: object): value is S3FileCreateRequestDTO {
    return true;
}

export function S3FileCreateRequestDTOFromJSON(json: any): S3FileCreateRequestDTO {
    return S3FileCreateRequestDTOFromJSONTyped(json, false);
}

export function S3FileCreateRequestDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): S3FileCreateRequestDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'contentTypeId': json['contentTypeId'] == null ? undefined : json['contentTypeId'],
        'sizeBytes': json['sizeBytes'] == null ? undefined : json['sizeBytes'],
        'plainSHA256Hash': json['plainSHA256Hash'] == null ? undefined : json['plainSHA256Hash'],
        'createdStamp': json['createdStamp'] == null ? undefined : (new Date(json['createdStamp'])),
        'beginStamp': json['beginStamp'] == null ? undefined : (new Date(json['beginStamp'])),
        'endStamp': json['endStamp'] == null ? undefined : (new Date(json['endStamp'])),
        'compressionAlgorithm': json['compressionAlgorithm'] == null ? undefined : json['compressionAlgorithm'],
        'compressedSHA256Hash': json['compressedSHA256Hash'] == null ? undefined : json['compressedSHA256Hash'],
        'compressedSizeBytes': json['compressedSizeBytes'] == null ? undefined : json['compressedSizeBytes'],
    };
}

export function S3FileCreateRequestDTOToJSON(value?: S3FileCreateRequestDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'contentTypeId': value['contentTypeId'],
        'sizeBytes': value['sizeBytes'],
        'plainSHA256Hash': value['plainSHA256Hash'],
        'createdStamp': value['createdStamp'] == null ? undefined : ((value['createdStamp'] as any).toISOString()),
        'beginStamp': value['beginStamp'] == null ? undefined : ((value['beginStamp'] as any).toISOString()),
        'endStamp': value['endStamp'] == null ? undefined : ((value['endStamp'] as any).toISOString()),
        'compressionAlgorithm': value['compressionAlgorithm'],
        'compressedSHA256Hash': value['compressedSHA256Hash'],
        'compressedSizeBytes': value['compressedSizeBytes'],
    };
}

