/* tslint:disable */
/* eslint-disable */
/**
 * RDPMS API v1
 * RDPMS API v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileSummaryDTO } from './FileSummaryDTO';
import {
    FileSummaryDTOFromJSON,
    FileSummaryDTOFromJSONTyped,
    FileSummaryDTOToJSON,
} from './FileSummaryDTO';
import type { DataSetStateDTO } from './DataSetStateDTO';
import {
    DataSetStateDTOFromJSON,
    DataSetStateDTOFromJSONTyped,
    DataSetStateDTOToJSON,
} from './DataSetStateDTO';
import type { TagDTO } from './TagDTO';
import {
    TagDTOFromJSON,
    TagDTOFromJSONTyped,
    TagDTOToJSON,
} from './TagDTO';

/**
 * Represents a summary of a dataset, including identifying information, timestamps, state, tags,
 * and metadata fields.
 * @export
 * @interface DataSetDetailedDTO
 */
export interface DataSetDetailedDTO {
    /**
     * Uniquely identifies the dataset. Typically server-generated. Should not be manually set by the client.
     * @type {string}
     * @memberof DataSetDetailedDTO
     */
    id?: string | null;
    /**
     * An optional, human-readable identifier for the dataset.
     * @type {string}
     * @memberof DataSetDetailedDTO
     */
    slug?: string | null;
    /**
     * Non-unique, mandatory descriptive name of the dataset. Must be provided by the client.
     * @type {string}
     * @memberof DataSetDetailedDTO
     */
    name?: string | null;
    /**
     * List of tags associated with the dataset, used for categorization and filtering purposes.
     * @type {Array<TagDTO>}
     * @memberof DataSetDetailedDTO
     */
    assignedTags?: Array<TagDTO> | null;
    /**
     * UTC timestamp when the dataset was originally created.
     * Mandatory property, should be provided by the client.
     * @type {Date}
     * @memberof DataSetDetailedDTO
     */
    createdStampUTC?: Date | null;
    /**
     * UTC timestamp that indicates when the dataset was deleted.
     * Null if the dataset has not been deleted yet.
     * @type {Date}
     * @memberof DataSetDetailedDTO
     */
    deletedStampUTC?: Date | null;
    /**
     * UTC timestamp that marks the period begin of the dataset.
     * Only to be set by server.
     * @type {Date}
     * @memberof DataSetDetailedDTO
     */
    beginStampUTC?: Date | null;
    /**
     * UTC timestamp that marks the period end of the dataset.
     * Only to be set by server.
     * @type {Date}
     * @memberof DataSetDetailedDTO
     */
    endStampUTC?: Date | null;
    /**
     * 
     * @type {DataSetStateDTO}
     * @memberof DataSetDetailedDTO
     */
    state?: DataSetStateDTO;
    /**
     * Indicates if the dataset represents time-series data.
     * Only to be set by server.
     * @type {boolean}
     * @memberof DataSetDetailedDTO
     */
    isTimeSeries?: boolean | null;
    /**
     * Flags whether the dataset has been marked as deleted.
     * Only to be set by server.
     * @type {boolean}
     * @memberof DataSetDetailedDTO
     */
    isDeleted?: boolean | null;
    /**
     * Fields, for which metadata exists.
     * Only to be set by server.
     * @type {Array<string>}
     * @memberof DataSetDetailedDTO
     */
    metadataFields?: Array<string> | null;
    /**
     * Amount of files in the dataset.
     * @type {number}
     * @memberof DataSetDetailedDTO
     */
    fileCount?: number;
    /**
     * Id of the collection this dataset belongs to.
     * @type {string}
     * @memberof DataSetDetailedDTO
     */
    collectionId?: string | null;
    /**
     * 
     * @type {Array<FileSummaryDTO>}
     * @memberof DataSetDetailedDTO
     */
    files?: Array<FileSummaryDTO> | null;
}

/**
 * Check if a given object implements the DataSetDetailedDTO interface.
 */
export function instanceOfDataSetDetailedDTO(value: object): value is DataSetDetailedDTO {
    return true;
}

export function DataSetDetailedDTOFromJSON(json: any): DataSetDetailedDTO {
    return DataSetDetailedDTOFromJSONTyped(json, false);
}

export function DataSetDetailedDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSetDetailedDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'name': json['name'] == null ? undefined : json['name'],
        'assignedTags': json['assignedTags'] == null ? undefined : ((json['assignedTags'] as Array<any>).map(TagDTOFromJSON)),
        'createdStampUTC': json['createdStampUTC'] == null ? undefined : (new Date(json['createdStampUTC'])),
        'deletedStampUTC': json['deletedStampUTC'] == null ? undefined : (new Date(json['deletedStampUTC'])),
        'beginStampUTC': json['beginStampUTC'] == null ? undefined : (new Date(json['beginStampUTC'])),
        'endStampUTC': json['endStampUTC'] == null ? undefined : (new Date(json['endStampUTC'])),
        'state': json['state'] == null ? undefined : DataSetStateDTOFromJSON(json['state']),
        'isTimeSeries': json['isTimeSeries'] == null ? undefined : json['isTimeSeries'],
        'isDeleted': json['isDeleted'] == null ? undefined : json['isDeleted'],
        'metadataFields': json['metadataFields'] == null ? undefined : json['metadataFields'],
        'fileCount': json['fileCount'] == null ? undefined : json['fileCount'],
        'collectionId': json['collectionId'] == null ? undefined : json['collectionId'],
        'files': json['files'] == null ? undefined : ((json['files'] as Array<any>).map(FileSummaryDTOFromJSON)),
    };
}

export function DataSetDetailedDTOToJSON(value?: DataSetDetailedDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'slug': value['slug'],
        'name': value['name'],
        'assignedTags': value['assignedTags'] == null ? undefined : ((value['assignedTags'] as Array<any>).map(TagDTOToJSON)),
        'createdStampUTC': value['createdStampUTC'] == null ? undefined : ((value['createdStampUTC'] as any).toISOString()),
        'deletedStampUTC': value['deletedStampUTC'] == null ? undefined : ((value['deletedStampUTC'] as any).toISOString()),
        'beginStampUTC': value['beginStampUTC'] == null ? undefined : ((value['beginStampUTC'] as any).toISOString()),
        'endStampUTC': value['endStampUTC'] == null ? undefined : ((value['endStampUTC'] as any).toISOString()),
        'state': DataSetStateDTOToJSON(value['state']),
        'isTimeSeries': value['isTimeSeries'],
        'isDeleted': value['isDeleted'],
        'metadataFields': value['metadataFields'],
        'fileCount': value['fileCount'],
        'collectionId': value['collectionId'],
        'files': value['files'] == null ? undefined : ((value['files'] as Array<any>).map(FileSummaryDTOToJSON)),
    };
}

