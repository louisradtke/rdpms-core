/* tslint:disable */
/* eslint-disable */
/**
 * My API v1
 * API Version v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DataSetSummaryDTO,
} from '../models/index';
import {
    DataSetSummaryDTOFromJSON,
    DataSetSummaryDTOToJSON,
} from '../models/index';

export interface ApiV1DataDatasetsBatchPostRequest {
    dataSetSummaryDTO?: Array<DataSetSummaryDTO>;
}

export interface ApiV1DataDatasetsPostRequest {
    dataSetSummaryDTO?: DataSetSummaryDTO;
}

/**
 * 
 */
export class DataSetsApi extends runtime.BaseAPI {

    /**
     * Add a batch of item to the system.
     */
    async apiV1DataDatasetsBatchPostRaw(requestParameters: ApiV1DataDatasetsBatchPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/data/datasets/batch`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['dataSetSummaryDTO']!.map(DataSetSummaryDTOToJSON),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Add a batch of item to the system.
     */
    async apiV1DataDatasetsBatchPost(requestParameters: ApiV1DataDatasetsBatchPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiV1DataDatasetsBatchPostRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiV1DataDatasetsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DataSetSummaryDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/data/datasets`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DataSetSummaryDTOFromJSON));
    }

    /**
     */
    async apiV1DataDatasetsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DataSetSummaryDTO>> {
        const response = await this.apiV1DataDatasetsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Add a single item to the system.
     */
    async apiV1DataDatasetsPostRaw(requestParameters: ApiV1DataDatasetsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/data/datasets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DataSetSummaryDTOToJSON(requestParameters['dataSetSummaryDTO']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Add a single item to the system.
     */
    async apiV1DataDatasetsPost(requestParameters: ApiV1DataDatasetsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiV1DataDatasetsPostRaw(requestParameters, initOverrides);
    }

}
