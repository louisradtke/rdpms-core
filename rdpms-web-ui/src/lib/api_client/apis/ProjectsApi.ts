/* tslint:disable */
/* eslint-disable */
/**
 * RDPMS API v1
 * RDPMS API v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorMessageDTO,
  ProjectSummaryDTO,
} from '../models/index';
import {
    ErrorMessageDTOFromJSON,
    ErrorMessageDTOToJSON,
    ProjectSummaryDTOFromJSON,
    ProjectSummaryDTOToJSON,
} from '../models/index';

export interface ApiV1ProjectsGetRequest {
    slug?: string;
}

export interface ApiV1ProjectsIdGetRequest {
    id: string;
}

export interface ApiV1ProjectsIdPutRequest {
    id: string;
    projectSummaryDTO?: ProjectSummaryDTO;
}

/**
 * 
 */
export class ProjectsApi extends runtime.BaseAPI {

    /**
     * Get all projects.
     */
    async apiV1ProjectsGetRaw(requestParameters: ApiV1ProjectsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ProjectSummaryDTO>>> {
        const queryParameters: any = {};

        if (requestParameters['slug'] != null) {
            queryParameters['slug'] = requestParameters['slug'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/projects`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProjectSummaryDTOFromJSON));
    }

    /**
     * Get all projects.
     */
    async apiV1ProjectsGet(requestParameters: ApiV1ProjectsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ProjectSummaryDTO>> {
        const response = await this.apiV1ProjectsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV1ProjectsIdGetRaw(requestParameters: ApiV1ProjectsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ProjectSummaryDTO>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1ProjectsIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/projects/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProjectSummaryDTOFromJSON(jsonValue));
    }

    /**
     */
    async apiV1ProjectsIdGet(requestParameters: ApiV1ProjectsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProjectSummaryDTO> {
        const response = await this.apiV1ProjectsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Id field on the body is ignored.
     */
    async apiV1ProjectsIdPutRaw(requestParameters: ApiV1ProjectsIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1ProjectsIdPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/projects/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ProjectSummaryDTOToJSON(requestParameters['projectSummaryDTO']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Id field on the body is ignored.
     */
    async apiV1ProjectsIdPut(requestParameters: ApiV1ProjectsIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiV1ProjectsIdPutRaw(requestParameters, initOverrides);
    }

}
