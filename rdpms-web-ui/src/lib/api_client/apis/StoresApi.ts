/* tslint:disable */
/* eslint-disable */
/**
 * RDPMS API v1
 * RDPMS API v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DataStoreSummaryDTO,
} from '../models/index';
import {
    DataStoreSummaryDTOFromJSON,
    DataStoreSummaryDTOToJSON,
} from '../models/index';

export interface ApiV1DataStoresIdGetRequest {
    id: string;
}

/**
 * 
 */
export class StoresApi extends runtime.BaseAPI {

    /**
     * Get all data stores.
     */
    async apiV1DataStoresGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DataStoreSummaryDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/data/stores`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DataStoreSummaryDTOFromJSON));
    }

    /**
     * Get all data stores.
     */
    async apiV1DataStoresGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DataStoreSummaryDTO>> {
        const response = await this.apiV1DataStoresGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get a single data store by id.
     */
    async apiV1DataStoresIdGetRaw(requestParameters: ApiV1DataStoresIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DataStoreSummaryDTO>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1DataStoresIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/data/stores/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DataStoreSummaryDTOFromJSON(jsonValue));
    }

    /**
     * Get a single data store by id.
     */
    async apiV1DataStoresIdGet(requestParameters: ApiV1DataStoresIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DataStoreSummaryDTO> {
        const response = await this.apiV1DataStoresIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
