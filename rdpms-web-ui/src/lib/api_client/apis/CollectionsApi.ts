/* tslint:disable */
/* eslint-disable */
/**
 * RDPMS API v1
 * RDPMS API v1
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CollectionSummaryDTO,
  ProblemDetails,
} from '../models/index';
import {
    CollectionSummaryDTOFromJSON,
    CollectionSummaryDTOToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
} from '../models/index';

export interface ApiV1DataCollectionsIdGetRequest {
    id: string;
}

export interface ApiV1DataCollectionsPostRequest {
    collectionSummaryDTO?: CollectionSummaryDTO;
}

/**
 * 
 */
export class CollectionsApi extends runtime.BaseAPI {

    /**
     * Get all colletions.
     */
    async apiV1DataCollectionsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CollectionSummaryDTO>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/data/collections`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CollectionSummaryDTOFromJSON));
    }

    /**
     * Get all colletions.
     */
    async apiV1DataCollectionsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CollectionSummaryDTO>> {
        const response = await this.apiV1DataCollectionsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get a single collection by id.
     */
    async apiV1DataCollectionsIdGetRaw(requestParameters: ApiV1DataCollectionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CollectionSummaryDTO>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling apiV1DataCollectionsIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/data/collections/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CollectionSummaryDTOFromJSON(jsonValue));
    }

    /**
     * Get a single collection by id.
     */
    async apiV1DataCollectionsIdGet(requestParameters: ApiV1DataCollectionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CollectionSummaryDTO> {
        const response = await this.apiV1DataCollectionsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Add a single item to the system.
     */
    async apiV1DataCollectionsPostRaw(requestParameters: ApiV1DataCollectionsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/data/collections`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CollectionSummaryDTOToJSON(requestParameters['collectionSummaryDTO']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Add a single item to the system.
     */
    async apiV1DataCollectionsPost(requestParameters: ApiV1DataCollectionsPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.apiV1DataCollectionsPostRaw(requestParameters, initOverrides);
    }

}
