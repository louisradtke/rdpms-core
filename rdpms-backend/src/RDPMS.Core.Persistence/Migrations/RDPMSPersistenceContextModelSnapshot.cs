// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RDPMS.Core.Persistence;

#nullable disable

namespace RDPMS.Core.Persistence.Migrations
{
    [DbContext(typeof(RDPMSPersistenceContext))]
    partial class RDPMSPersistenceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("DataSetUsedForJobsEntity", b =>
                {
                    b.Property<Guid>("SourceDatasetsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SourceForJobsId")
                        .HasColumnType("TEXT");

                    b.HasKey("SourceDatasetsId", "SourceForJobsId");

                    b.HasIndex("SourceForJobsId");

                    b.ToTable("DataSetUsedForJobsEntity");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.ContentTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MimeType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataContainerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DefaultDataStoreId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DefaultDataStoreId");

                    b.ToTable("DataContainers");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataFileEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BeginStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedStamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataSetEntityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataStoreEntityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndStamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FileTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DataSetEntityId");

                    b.HasIndex("DataStoreEntityId");

                    b.HasIndex("FileTypeId");

                    b.ToTable("DataFiles");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataSetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AncestorDatasetIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreateJobId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedStamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataContainerEntityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreateJobId");

                    b.HasIndex("DataContainerEntityId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataSetUsedForJobsEntity", b =>
                {
                    b.Property<Guid>("JobId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SourceDatasetId")
                        .HasColumnType("TEXT");

                    b.HasKey("JobId", "SourceDatasetId");

                    b.ToTable("DataSetsUsedForJobs");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataStoreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DataStores");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.JobEntityEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedStamp")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdateStamp")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("LocalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OutputContainerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OutputDataStoreId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PipelineInstanceEntityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartedStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminatedStamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("LocalId");

                    b.HasAlternateKey("State");

                    b.HasIndex("OutputContainerId");

                    b.HasIndex("OutputDataStoreId");

                    b.HasIndex("PipelineInstanceEntityId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.LogSectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("JobEntityEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("StoredFileId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobEntityEntityId");

                    b.HasIndex("StoredFileId");

                    b.ToTable("LogSectionEntity");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.MetadataJsonFieldEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataSetEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DataSetEntityId");

                    b.ToTable("MetadataJsonFieldEntity");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.PipelineInstanceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<ulong>("LocalId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("LocalId");

                    b.ToTable("PipelineInstances");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.TagEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DataSetEntityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DataSetEntityId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("DataSetUsedForJobsEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataSetEntity", null)
                        .WithMany()
                        .HasForeignKey("SourceDatasetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RDPMS.Core.Persistence.Model.JobEntityEntity", null)
                        .WithMany()
                        .HasForeignKey("SourceForJobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataContainerEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataStoreEntity", "DefaultDataStore")
                        .WithMany()
                        .HasForeignKey("DefaultDataStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultDataStore");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataFileEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataSetEntity", null)
                        .WithMany("Files")
                        .HasForeignKey("DataSetEntityId");

                    b.HasOne("RDPMS.Core.Persistence.Model.DataStoreEntity", null)
                        .WithMany("DataFiles")
                        .HasForeignKey("DataStoreEntityId");

                    b.HasOne("RDPMS.Core.Persistence.Model.ContentTypeEntity", "FileType")
                        .WithMany()
                        .HasForeignKey("FileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileType");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataSetEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.JobEntityEntity", "CreateJob")
                        .WithMany("OutputDatasets")
                        .HasForeignKey("CreateJobId");

                    b.HasOne("RDPMS.Core.Persistence.Model.DataContainerEntity", null)
                        .WithMany("AssociatedDataSets")
                        .HasForeignKey("DataContainerEntityId");

                    b.Navigation("CreateJob");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.JobEntityEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataContainerEntity", "OutputContainer")
                        .WithMany()
                        .HasForeignKey("OutputContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RDPMS.Core.Persistence.Model.DataStoreEntity", "OutputDataStore")
                        .WithMany()
                        .HasForeignKey("OutputDataStoreId");

                    b.HasOne("RDPMS.Core.Persistence.Model.PipelineInstanceEntity", null)
                        .WithMany("Jobs")
                        .HasForeignKey("PipelineInstanceEntityId");

                    b.Navigation("OutputContainer");

                    b.Navigation("OutputDataStore");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.LogSectionEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.JobEntityEntity", null)
                        .WithMany("Logs")
                        .HasForeignKey("JobEntityEntityId");

                    b.HasOne("RDPMS.Core.Persistence.Model.DataFileEntity", "StoredFile")
                        .WithMany()
                        .HasForeignKey("StoredFileId");

                    b.Navigation("StoredFile");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.MetadataJsonFieldEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataSetEntity", null)
                        .WithMany("MetadataJsonFields")
                        .HasForeignKey("DataSetEntityId");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.TagEntity", b =>
                {
                    b.HasOne("RDPMS.Core.Persistence.Model.DataSetEntity", null)
                        .WithMany("AssignedTags")
                        .HasForeignKey("DataSetEntityId");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataContainerEntity", b =>
                {
                    b.Navigation("AssociatedDataSets");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataSetEntity", b =>
                {
                    b.Navigation("AssignedTags");

                    b.Navigation("Files");

                    b.Navigation("MetadataJsonFields");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.DataStoreEntity", b =>
                {
                    b.Navigation("DataFiles");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.JobEntityEntity", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("OutputDatasets");
                });

            modelBuilder.Entity("RDPMS.Core.Persistence.Model.PipelineInstanceEntity", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
